Find the duplicate in an array of N+1 integers
-----------------------------------------------
Problem Statement: Given an array of N + 1 size, where each element is between 1 and N.
Find the one duplicate number.

Optional Condition: Assuming there is only one duplicate number, your task is to find 
the duplicate number.

Example 1: 

Input: arr=[1,3,4,2,2]

Output: 2

Explanation: Since 2 is the duplicate number the answer will be 2.

Example 2:

Input: [3,1,3,4,2]

Output:3

Explanation: Since 3 is the duplicate number the answer will be 3.

Example 3:

Input: [3, 9, 8, 4, 2, 7, 5, 6, 9, 4, 9]

Output:4

Explanation: Since 4 is the duplicate number the answer will be 4. Here, 9 is also
duplicate element so, 9 could also be the answer.

---------------X---------------X---------------X---------------X---------------X---------------

Brute Force approach 1: For each element compare with each of the other elements 
T = O(n^2)
S = O(1)

Brute Force approach 2 (Slightly better): Sort the elements. Then iterate over the array and
check if arr[i] == arr[i+1].
T = O(nlog n)
S = O(1)

Better Solution: Iterate over the array and put the element in HashMap.If an element is 
already present in HashMap then that is the duplicate element.
T = O(n)
S = O(n)

Optimal Approach: Here, we will use Floyd's cycle detection algorithm.
T = O(n)
S = O(1)