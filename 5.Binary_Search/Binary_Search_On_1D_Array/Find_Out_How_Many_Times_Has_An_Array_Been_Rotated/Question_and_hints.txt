Find Out How Many Times Has An Array Been Rotated (array contains only unique elements)
---------------------------------------------------------------------------------------
Problem statement: You are given an array 'arr' having 'n' distinct integers sorted in ascending order. 
The array is right rotated 'r' times

Find the minimum value of 'r'.

Right rotating an array means shifting the element at 'ith' index to (‘i+1') mod 'n' index, for all 'i' from 0 to ‘n-1'.


Example 1:
Input: 'n' = 5 , ‘arr’ = [3, 4, 5, 1, 2]
Output: 3 

Explanation:
If we rotate the array [1 ,2, 3, 4, 5] right '3' times then we will get the 'arr'. Thus 'r' = 3.


Example 2:
Input: 'n' = 4 , 'arr' = [2, 3, 4, 1]
Output: 3   

Explanation of sample output 1:
If we right rotate the array {1, 2, 3, 4} by '3' times then we will get {2, 3, 4, 1}. Thus 'r' = 3.


Example 3:
Input: 'n' = 3 , 'arr' = [1 2 3]
Output: 0 

Explanation of sample output 2:
If we right rotate the array {1, 2, 3} by '0' time then we will get {1, 2, 3}. Thus 'r' = 0.


Expected time complexity:
Can you solve this in O(logn) time complexity?


Constraints:
1 <= ‘n’ <= 10^5    
1 <= ‘arr[i]’ <= 10^9
Time Limit: 1 sec