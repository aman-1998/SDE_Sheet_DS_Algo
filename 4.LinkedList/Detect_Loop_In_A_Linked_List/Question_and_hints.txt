Detect a Cycle in a Linked List
--------------------------------
Given head, the head of a linked list, determine if the linked list has a cycle in it.

There is a cycle in a linked list if there is some node in the list that can be reached again by 
continuously following the next pointer. Internally, pos is used to denote the index of the node 
that tail's next pointer is connected to. Note that pos is not passed as a parameter.

Return true if there is a cycle in the linked list. Otherwise, return false.


Example 1:

Input Format:

LL: 1 2 3 4 5


Result: True

Explanation: The last node with the value of 5 has its 'next' pointer pointing back to a previous node 
with the value of 3. This has resulted in a loop, hence we return true.

Example 2:

Input Format:

LL: 1 2 3 4 9 9


Result: False

Explanation: : In this example, the linked list does not have a loop hence returns false.